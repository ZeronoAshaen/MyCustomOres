buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'forge'
apply plugin: 'curseforge'
apply plugin: 'maven'

ext.configFile = file "build.properties"

configFile.withReader {
	def prop = new Properties()
	prop.load(it)
	project.ext.config = new ConfigSlurper().parse prop
}

version = config.mod_version
group= "co.zerono.mco" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MyCustomOres"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
	
	replaceIn "reference/Reference.java"
	replace "@VERSION@", "${config.mod_version}.${System.getenv("BUILD_NUMBER") ?: 0}"
	if (project.hasProperty("mco_signature")) {
		replace "@FINGERPRINT@", project.mco_signature
	}
    //runDir = "eclipse"
}

version = "${config.minecraft_version}-${config.mod_version}.${System.getenv("BUILD_NUMBER") ?:0}"

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task devJar(type: Jar, dependsOn: 'classes') {
    from(sourceSets.main.output) {
        include '**'
    }

    extension = 'jar'
    classifier = 'dev'
}

artifacts {
    archives devJar
}

curse {
    projectId = project.hasProperty('curseForgeProjectId') ? project.curseForgeProjectId : ''
    apiKey = project.hasProperty('curseForgeApiKey') ? project.curseForgeApiKey : ''
    releaseType = project.hasProperty('release_type') ? project.release_type: 'Alpha'
	displayName = 'MyCustomOres'
	changelog = project.hasProperty('change_log') ? project.change_log: ''
}
